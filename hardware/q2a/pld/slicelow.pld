GAL16V8
slicelow

; C3:C0 - Control
; ZP    - Zero-page bit of DBUS
; CIN   - Carry in from lower bits (initially /C1)
; SIN   - Shift in from higher bits (X, initially 0).
; IOIN  - IO indicator from lower bits (initially 1).
CLK   IOIN  CIN   ZP    SIN   C3    C2    C1    C0      GND
/OE   /SW   DBUS  ABUS  A     X     P     COUT  IOOUT   VCC

; Control bits:
; 0000 - IDLE
; 0001 - FETCH/INCP:  ABUS=P, O=DBUS, P++
; 0010 - DEREF/LOAD:  ABUS=X, X=DBUS
; 0011 - JUMP:        P=X
; 0100 - STA:         ABUS=X, DBUS=A
; 0101 - STS:         ABUS=P, DBUS=SW
; 10xx - ALU:         A=f(A, X)
; 11xx - RESET:       P=SW

A.R = /C3 *  A
    +  C3 * /C2 * /C1 * /C0 *       X          ; LDA/LEA
    +  C3 * /C2 * /C1 *  C0 * /A * /X          ; NOR
    +  C3 * /C2 *  C1 * /C0 * /A * /X *  CIN   ; ADD 001
    +  C3 * /C2 *  C1 * /C0 * /A *  X * /CIN   ; ADD 010
    +  C3 * /C2 *  C1 * /C0 *  A * /X * /CIN   ; ADD 100
    +  C3 * /C2 *  C1 * /C0 *  A *  X *  CIN   ; ADD 111
    +  C3 * /C2 *  C1 *  C0 *  SIN             ; SHR

P.R =  C3 *  C2             *  SW         ; RESET
    + /C3 * /C2 * /C1 *  C0 *  P * /CIN   ; FETCH: 10
    + /C3 * /C2 * /C1 *  C0 * /P *  CIN   ; FETCH: 01
    + /C3 * /C2 *  C1 * /C0 *  P          ; DEREF/LOAD
    + /C3 * /C2 *  C1 *  C0 *  X          ; JUMP
    + /C3 *  C2 *              P          ; STA/STS
    +  C3 * /C2 *              P          ; ALU
    + /C3 * /C2 * /C1 * /C0 *  P          ; IDLE

; Low (set to DBUS during FETCH):
X.R = /C3 * /C2 * /C1 * /C0 * X         ; IDLE
    + /C3 * /C2 * /C1 *  C0 * DBUS      ; FETCH
    + /C3 * /C2 *  C1 * /C0 * DBUS      ; DEREF/LOAD
    + /C3 * /C2 *  C1 *  C0 * X         ; JUMP
    + /C3 *  C2             * X         ; STORE
    +  C3 * /C2             * X         ; ALU

; Carry output to higher order bits
COUT  = /C3 * /C2 * /C1 *  C0 *  P *  CIN       ; FETCH: P carry
      +  C3 * /C2 *  C1 * /C0 *  A *  X         ; ADD 11x: carry
      +  C3 * /C2 *  C1 * /C0 *  A      *  CIN  ; ADD 1x1: carry
      +  C3 * /C2 *  C1 * /C0      *  X *  CIN  ; ADD x11: carry
      +  C3 * /C2 * /C1 * /C0 * /X * CIN        ; LDA/LEA: zero
      +  C3 * /C2 * /C1 *  C0 *  A * CIN        ; NOR 1x: zero
      +  C3 * /C2 * /C1 *  C0 *  X * CIN        ; NOR x1: zero

; IO output to higher order bits
IOOUT  = /C3 * IOIN * ABUS

ABUS  = /C3 * /C2 * /C1 * P         ; RESET/FETCH
      + /C3 * /C2 *  C1 *       X   ; DEREF/LOAD/JUMP
      + /C3 *  C2 * /C1 * /C0 * X   ; STA
      + /C3 *  C2 * /C1 *  C0 * P   ; STS

DBUS.T  = /C3 * C2 * /C1 * /C0 * A    ; STA
        + /C3 * C2 * /C1 *  C0 * SW   ; STS

DBUS.E  = /C3 * C2 * /C1  ; STORE

DESCRIPTION

