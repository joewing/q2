
.def  x0  2
.def  x1  3
.def  x2  4
.def  x3  5
.def  x4  6
.def  x5  7
.def  x6  8
.def  x7  9

  .org  0x800

  lea   $+2
  jmp   output

  lea   =to_sort_end - to_sort
  sta   =x0
  lda   data_ptr
  sta   =x1
  lea   $+2
  jmp   @sort_ptr

  lea   =0
  sta   @minus1

  lea   $+2
  jmp   output
  jmp   $

output:
  sta   =x7
  lea   =to_sort_end - to_sort
  sta   =x0
  lda   data_ptr
  sta   =x1
output_loop:
  lda   @=x1
  sta   @minus1
  lda   =x1
  add   one
  sta   =x1
  lda   =x0
  nor   zero
  add   one
  nor   zero
  sta   =x0
  jfc   output_loop
  jmp   @=x7

one:
  .dw   1
zero:
  .dw   0
minus1:
  .dw   -1

data_ptr:
  .dw   to_sort
sort_ptr:
  .dw   sort

  .align 128

to_sort:
  .dw   5
  .dw   3
  .dw   9
  .dw   34
  .dw   8
  .dw   5
  .dw   15
  .dw   2
to_sort_end:

  .align  128

; Sort x0 words starting at x1
sort:
  sta   =x7
  lea   =0
  sta   =x2   ; x2 = 0 .. x0
sort_loop1:
  nor   sort_zero
  add   =x0
  jfc   @=x7  ; x2 >= x0 - return
  lea   =1
  add   =x2
  sta   =x3   ; x3 = x2 + 1 .. x0
sort_loop2:
  nor   sort_zero
  add   =x0
  jfc   sort_cont1  ; x3 >= x0
  lda   =x1
  add   =x2
  sta   =x4   ; @=x4 = x1[x2]
  lda   =x1
  add   =x3
  sta   =x5   ; @=x5 = x1[x3]
  lda   @=x5
  nor   sort_zero
  add   @=x4
  jfc   sort_cont2
  lda   @=x5
  sta   =x6
  lda   @=x4
  sta   @=x5
  lda   =x6
  sta   @=x4
sort_cont2:
  lea   =1
  add   =x3
  sta   =x3
  jmp   sort_loop2
sort_cont1:
  lea   =1
  add   =x2
  sta   =x2
  jmp   sort_loop1
sort_zero:
  .dw   0

