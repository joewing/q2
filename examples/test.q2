
  .org  0x000

  lea   $+2
  jmp   @load_store_test_ptr

  lea   $+2
  jmp   @flag_test_ptr

; Success if we got here
  lea   =1
  sta   @output_ptr
  jmp   $

fail:
  lea   =0
  sta   @output_ptr
  jmp   $

ra:
  .dw   0
x0:
  .dw   0
x1:
  .dw   0
output_ptr:
  .dw   0xfff
zero:
  .dw   0
one:
  .dw   1
six:
  .dw   6
ten:
  .dw   10

load_store_test_ptr:
  .dw   load_store_test
flag_test_ptr:
  .dw   flag_test

  .org  0x100
load_store_test:
  sta   =ra

  ; Simple relative and immediate load/store
  lea   =0
  sta   =x0
  lea   =1
  lda   =x0
  jfc   =fail

  ; Indirect load/store
  lea   =0
  sta   =x0
  lea   =x0
  sta   =x1
  lea   =0
  nor   =zero
  sta   @=x1
  lea   =0
  lda   @=x1
  nor   =zero
  jfc   =fail

  jmp   @=ra

  .org  0x200

flag_test:
  sta   =ra

  ; shift right, carry=1
  lea   =1
  sta   =x0
  shr   =x0
  sta   =x0
  jfc   =fail    ; fail if no carry

  ; shift right, carry=0
  lea   =2
  sta   =x0
  shr   =x0
  sta   =x0
  jfc   $+2
  jmp   =fail    ; fail if carry


  ; load, zero=1
  lda   =zero
  jfc   =fail    ; fail if not zero

  ; load, zero=0
  lda   =one
  jfc   $+2
  jmp   =fail    ; fail if zero

  ; NOR, zero = 1
  lda   =zero
  nor   =zero
  nor   =zero
  jfc   =fail

  ; NOR, zero = 0
  lda   =zero
  nor   =zero
  jfc   $+2
  jmp   =fail

  ; add, carry = 0
  lea   =5
  add   =six
  jfc   $+2
  jmp   =fail

  ; add, carry = 1
  lea   =5
  nor   =zero
  add   =ten
  jfc   =fail

  jmp   @=ra
