
.include examples/zeropage.q2

.def  buf     63  ; Last word of the first page.

  .org  0x800

menu:
  lea   $+3
  jmp   @$+1
  .dw   init

  lea   menu_str1
  sta   =x0
  lea   $+3
  jmp   @$+1
  .dw   puts

  lea   menu_items
  sta   =x9

menu_loop:

  lea   =0
  sta   =rseed

menu_new_seed:

  lea   =1
  add   =rseed
  sta   =rseed

  lda   $+3
  sta   @=neg1
  jmp   $+2
  .dw   0x180 + 0x40

  lda   =x9
  sta   =x0
  lea   $+3
  jmp   @$+1
  .dw   puts

  lda   $+3
  sta   @=neg1
  jmp   $+2
  .dw   0x180 + 0x40 + 11

  lda   =rseed
  sta   =x0
  lea   $+3
  jmp   @$+1
  .dw   putint

  lea   $+3
  jmp   @$+1
  .dw   waitkey

  lda   =x0
  add   menu_left_mask
  jfc   $+2
  jmp   menu_not_left

  lea   menu_items
  nor   =zero
  add   =x9
  jfc   menu_first
  lda   =x9
  jmp   menu_not_first
menu_first:
  lda   menu_last_item
menu_not_first:
  add   menu_prev
  sta   =x9
  jmp   menu_loop

menu_not_left:

  lda   =x0
  add   menu_right_mask
  jfc   $+2
  jmp   menu_not_right

  lea   =12
  add   =x9
  sta   =x9
  lda   menu_last_item
  nor   =zero
  add   =x9
  nor   =zero
  jfc   menu_loop
  jmp   menu

menu_not_right:

  lda   =x0
  add   menu_select_mask
  jfc   $+2
  jmp   menu_new_seed

  lea   =11
  add   =x9
  sta   =x9
  lda   @=x9
  sta   =x9

  lea   menu
  jmp   @=x9

menu_str1:
  ;      0123456789ABCDEF
  .dw   "--- Q2 Demo ---", 0

menu_left_mask:
  .dw   0xFFE
menu_right_mask:
  .dw   0xFFD
menu_select_mask:
  .dw   0xFFB

menu_prev:
  .dw   -12

menu_last_item:
  .dw   menu_items_end

menu_items:
  ;      0123456789ABCDEF
  .dw   "< > Life  "
  .dw   0
  .dw   life
  ;      0123456789ABCDEF
  .dw   "< > Snake "
  .dw   0
  .dw   snake
  ;      0123456789ABCDEF
  .dw   "< > Maze  "
  .dw   0
  .dw   maze
menu_items_end:

  .align  128

; Initialize the LCD and constants.
; Destroys x0, x1
init:
  sta   =x1
  lea   =0
  sta   =zero
  nor   =zero
  sta   =neg1
  lea   =1
  sta   =one
  lea   init_cmds
  sta   =x0
  lda   =x1
  jmp   @$+1
  .dw   puts
init_cmds:
  .dw   0x138   ; Function set (8-bits, 2-lines, 5x8)
  .dw   0x10C   ; Display on, cursor off, blink off
  .dw   0x106   ; Entry mode, increment, no shift
lcd_clear_cmd:
  .dw   0x101   ; Clear screen
  .dw   0x000

.include examples/lcd.q2

  .align 128

; Wait for a key press and return it in x0
; Destroys x0, x1
waitkey:
  sta   =x1
waitkey_loop:
  lda   @=neg1
  nor   =zero
  sta   =x0
  jfc   $+2
  jmp   waitkey_loop

waitkey_loop2:
  lea   =1
  add   @=neg1
  jfc   waitkey_loop2
  jmp   @=x1

  .align 128
.include examples/div.q2
.include examples/mult.q2
.include examples/rand.q2

.include examples/raster.q2

.include examples/snake.q2
.include examples/maze.q2
.include examples/life.q2


