
  jmp   @=1
  .dw   init
x0:
  .dw   0
x1:
  .dw   0
x2:
  .dw   0
x3:
  .dw   0
neg1:
  .dw   -1

  .org 0x800

init:
  lda   value1
  sta   =x0
  lda   value2
  sta   =x1
  lea   $+2
  jmp   mult
  lda   =x2
  sta   @=neg1
  jmp   $

value1:
  .dw   35
value2:
  .dw   15

; Multiply x2 = x0 * x1
; Destroys x0, x1, x2, x3
mult:
  sta   =x3
  lea   =0
  sta   =x2
mult_loop:
  lda   =x0
  jfc   mult_cont

  ; done when =x0 is 0.
  jmp  @=x3

mult_cont:
  shr   =x0
  sta   =x0
  jfc   mult_next

  ; bit is set, update =x2
  lda   =x1
  add   =x2
  sta   =x2

mult_next:

  ; shift =x1 left
  lda   =x1
  add   =x1
  sta   =x1

  jmp   mult_loop

