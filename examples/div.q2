
  jmp   @$+1
  .dw   init
zero:
  .dw   0
one:
  .dw   1
minus1:
  .dw   -1
ra:
  .dw   0
x0:
  .dw   0
x1:
  .dw   0
x2:
  .dw   0
x3:
  .dw   0
x4:
  .dw   0
output_ptr:
  .dw   -1

  .org  128

init:
  lda   numerator
  sta   =x0
  lda   denominator
  sta   =x1
  lea   $+2
  jmp   @div_ptr
  lda   =x2
  sta   @=output_ptr
  lda   =x3
  sta   @=output_ptr
  jmp   $

numerator:
  .dw   53
denominator:
  .dw   7
div_ptr:
  .dw   div

  .org 256

; Divide x2 = x0 / x1, remainder in x3
div:
  sta   =ra
  lea   =0
  sta   =x2   ; quotient
  sta   =x3   ; remainder
  lea   =11
div_loop:
  sta   =x4

  ; x3 <<= 1
  lda   =x3
  add   =x3
  sta   =x3

  ; x2 <<= 1
  lda   =x2
  add   =x2
  sta   =x2

  ; x3 = x3 | x0[x4]
  lda   =x0
  add   =x0
  sta   =x0
  jfc   div_not_set
  lda   =x3
  nor   =one
  nor   =zero
  sta   =x3
div_not_set:

  ; if x3 < x1 goto div_skip
  lda   =x1
  nor   =zero
  add   =one
  add   =x3
  jfc   div_skip

  ; x3 -= x1
  sta   =x3

  ; x2 |= 1
  lda   =x2
  nor   =one
  nor   =zero
  sta   =x2

div_skip:
  lda   =x4
  add   =minus1
  jfc   @=ra
  jmp   div_loop


